<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- **************************************************************** -->
    <!--  PROPERTIES                                                -->
    <!-- **************************************************************** -->
    <context:property-placeholder location="file:${DUKBONE_HOME}/conf/dukbone.properties" ignore-unresolvable="true"/>

    <!-- **************************************************************** -->
    <!--  STATIC RESOURCES                                                -->
    <!-- **************************************************************** -->
    <!-- Use spring servlet for all requests, including static resources -->
    <mvc:default-servlet-handler/>
    <!--OR-->
    <!-- All resources inside folder src/main/webapp/resources are mapped so they can be referred to inside JSP or HTML files -->
    <!-- In book there is description that this command help spring process static resources more effective-->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- **************************************************************** -->
    <!--  SPRING ANNOTATION PROCESSING                                    -->
    <!-- **************************************************************** -->
    <!-- Use @MVC annotations -->
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="ru.sam.dukbone.util.converter.JacksonObjectMapper"/>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- User @Controller, @Service... annotations -->
    <context:component-scan base-package="ru.sam.dukbone.web"/>

    <!-- **************************************************************** -->
    <!--  CONVERSION SERVICE                                              -->
    <!--  Standard Spring formatting-enabled implementation               -->
    <!-- **************************************************************** -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="ru.sam.dukbone.util.formatter.DateTimeFormatter"
                      p:datePattern="${date_time_format}"/>
            </set>
        </property>
        <!--<property name="converters">-->
        <!--<set>-->
        <!--<bean class="ru.sam.dukbone.util.converter.StringToLocalDateTimeConverter"-->
        <!--p:datePattern="${date_time_format}"/>-->
        <!--</set>-->
        <!--</property>-->
    </bean>

    <!-- **************************************************************** -->
    <!--  THYMELEAF-SPECIFIC ARTIFACTS                                    -->
    <!--  TemplateResolver <- TemplateEngine <- ViewResolver              -->
    <!-- **************************************************************** -->
    <bean id="templateResolver"
          class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
    </bean>
    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <property name="additionalDialects">
            <set value-type="org.thymeleaf.dialect.IDialect">
                <bean class="org.thymeleaf.extras.java8time.dialect.Java8TimeDialect"/>
                <bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect"/>
                <bean class="nz.net.ultraq.thymeleaf.LayoutDialect">
                    <constructor-arg>
                        <bean class="nz.net.ultraq.thymeleaf.decorators.strategies.AppendingStrategy"/>
                        <!--<bean class="nz.net.ultraq.thymeleaf.decorators.strategies.GroupingStrategy"/>-->
                    </constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- **************************************************************** -->
    <!--  MESSAGE EXTERNALIZATION/INTERNATIONALIZATION                    -->
    <!--  Standard Spring MessageSource implementation                    -->
    <!-- **************************************************************** -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
          p:cacheSeconds="60"
          p:defaultEncoding="UTF-8"
          p:basename="/i18n/messages"/>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
          p:defaultLocale="${locale}"/>
    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
              p:paramName="lang"/>
    </mvc:interceptors>

</beans>